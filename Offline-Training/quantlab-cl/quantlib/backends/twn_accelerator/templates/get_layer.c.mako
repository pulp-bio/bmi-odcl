<%!
import os
%>\
// This file has been autogenerated by the TWN Accelerator export script - don't edit it!
#include "${l.get_layer_header}"
#include "sd_card_drv.h"
#include "params.h"

u8 ${l.weights_varname}[${l.weight_buf_size}] __attribute__((aligned (16)));
u8 ${l.beta_varname}[${l.n_out_blk} * OUT_CHAN_BLOCK_SIZE];
u32 ${l.gamma_varname}[${l.n_out_blk} * OUT_CHAN_BLOCK_SIZE];

twn_layer_t ${l.layer_name} = {
    .relu = ${l.relu},
    .resid = false, // sequential nets only for now
    .bn = true,
    .beta_buf = ${l.beta_varname},
    .gamma_buf = ${l.gamma_varname},
    .n_in_blk = ${l.n_in_blk},
    .n_out_blk = ${l.n_out_blk},
    .line_width = 0,
    .n_lines = 0,
    .dyn_bn_bufs = false,
    .dyn_layer = false,
    .K = ${l.K},
    .weight_buf = ${l.weights_varname},
    .linebuf_order = ${l.linebuf_order},
    .pool_type = ${l.pool_type},
    .exec_cycles = 0,
    .comp_cycles = 0
    };

twn_layer_t * ${l.get_layer_fn}(void) {
  // read weights from SD card
  sd_file_to_buf("${os.path.join(n.name, l.weights_filename)}", ${l.weights_varname}, ${l.weight_buf_size});
  // read gamma from SD card
  sd_file_to_buf("${os.path.join(n.name, l.gamma_filename)}", ${l.gamma_varname}, ${4*l.n_out_blk*accel_params.chunk_size});
  // read beta from sd card
  sd_file_to_buf("${os.path.join(n.name, l.beta_filename)}", ${l.beta_varname}, ${l.n_out_blk*accel_params.chunk_size});
  return &${l.layer_name};
}
